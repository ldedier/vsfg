#!/bin/bash

SRC_DIR=srcs

LANGUAGE_C=0
LANGUAGE_CPP=1

PWD=`dirname "$0"`

GREEN="\033[32m"
RED="\033[91m"
CYAN="\033[36m"
EOC="\033[39m"

LANGUAGES=(c c++)
COMPILERS=(gcc g++)
EXTENSIONS=(.c .cpp)

DEFAULT_LANGUAGE=$LANGUAGE_C

COMPILER=${COMPILERS[$DEFAULT_LANGUAGE]}
LANGUAGE=${LANGUAGES[$DEFAULT_LANGUAGE]}
EXTENSION=${EXTENSIONS[$DEFAULT_LANGUAGE]}

FILE=valgrind.supp

source $PWD/$SRC_DIR/vsfg_parser.sh

echo "Configuration:
"
echo "Filename: $FILE"
echo "Compiler: $COMPILER"
if [ ! -z $MAIN ]; then
	EXT_LEN=${#EXTENSION}
	if [ ${MAIN: -$EXT_LEN} == "$EXTENSION" ]; then
		echo "main file: $MAIN"
	else
		echo "provided main source ${MAIN} does not have the ${EXTENSION} extension" 2>&1
		exit 1
	fi
else
	echo -e "${CYAN}main will be generated automatically !${EOC}"
	AUTO=1
	TMP="$(mktemp)"
	rm $TMP
	MAIN=${TMP}${EXTENSION}
	GENERATED_MAIN=$MAIN
	echo "int main() { return (0); }" > $MAIN
fi

BINARY="__vsfg__empty__binary__"

$COMPILER -o $BINARY $MAIN

if [ $? -ne 0 ];then
	echo -e "${RED}Could not compile ${MAIN} with ${COMPILER} compiler${EOC}"
	exit 1
fi

valgrind --leak-check=full --gen-suppressions=all "./${BINARY}" 2>&1 | perl $PWD/$SRC_DIR/supp_getter.perl > $FILE

if [ $? -eq 0 ]; then
	if [ ! -z $GENERATED_MAIN ];then
		echo -e "${GREEN}Generated ${FILE} successfully !${EOC}"
	else
		echo -e "${GREEN}Generated ${FILE} from $MAIN successfully !${EOC}"
	fi
else
	echo -e "${RED}An error occured${EOC}"
fi

rm $BINARY
rm -rf "${BINARY}.dSYM"

if [ ! -z $GENERATED_MAIN ];then
	rm $GENERATED_MAIN
fi
